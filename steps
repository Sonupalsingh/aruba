yum install -y python3-pip

python3.11 -m pip install paramiko
python3.11 -m pip install ansible-pylibssh

ansible-galaxy collection install arubanetworks.aoscx



export ANSIBLE_HOST_KEY_CHECKING=False


[defaults]
host_key_checking = False


show running-config | include user  ##user check how many users


############################################################################


#########Offline#####
1. 
install python3-pip
sudo yum install python3-pip -y

1.1
Download pip and its required files:
python3 -m pip download pip

1.2
Use the get-pip.py script you already downloaded, like this:
python3.11 get-pip.py --no-index --find-links=. pip


####
curl -O https://bootstrap.pypa.io/get-pip.py
python3.11 get-pip.py
python3.11 -m pip --version


2.
download this .tar.gz    .whl
pip3 download pip setuptools wheel paramiko ansible-pylibssh
or
python3.11 -m pip download ansible-pylibssh
or
python3.11 -m pip download  setuptools wheel paramiko ansible-pylibssh

3.   
Install pip and dependencies offline
python3.11 -m ensurepip --default-pip || true
python3.11 -m pip install --no-index --find-links=. pip setuptools wheel


4.
Then install your packages:
python3.11 -m pip install --no-index --find-links=. paramiko

python3.11 -m pip install --no-index --find-links=. paramiko ansible-pylibssh

5.
On your internet-connected machine (or any machine with internet)
ansible-galaxy collection download arubanetworks.aoscx


6.
arubanetworks-aoscx-<version>.tar.gz

7.
On your offline Ansible server, install the collection from the tarball:
ansible-galaxy collection install /root/arubanetworks-aoscx-<version>.tar.gz
or
ansible-galaxy collection install *.tar.gz --offline
                                   
8.
Verify the collection is installed:
ansible-galaxy collection list | grep arubanetworks


#######Real environment  ansible [core 2.14.2######
1. 
install python3-pip
sudo yum install python3-pip -y

2. 
# Install Aruba AOS-CX Ansible collection
ansible-galaxy collection install arubanetworks.aoscx


3.
This should install pip for Python 3.11
/usr/bin/python3.11 -m ensurepip --upgrade

4. 
Then install paramiko
/usr/bin/python3.11 -m pip install paramiko

(Optional but recommended):

/usr/bin/python3.11 -m pip install ansible-pylibssh


#######virtual environment###
/usr/bin/python3.11 -m pip install ansible-pylibssh


ansible-playbook -i inventory1 version.yaml

[aruba]
aruba-sw01 ansible_host=172.16.25.10 ansible_user=admin ansible_password='1234' ansible_network_os=arubanetworks.aoscx.aoscx ansible_connection=network_cli


1. 
Install Python3 and venv (if not already installed)    

sudo yum install python3 python3-venv -y

sudo dnf install python3-pip -y

pip3 install virtualenv

2.
Create and activate the virtual environment 
python3 -m venv ansible-env
source ansible-env/bin/activate
                                   

3. 
Upgrade pip and install Ansible + required collections   
pip install --upgrade pip

# Install Ansible
pip install ansible

# Install Aruba AOS-CX Ansible collection
ansible-galaxy collection install arubanetworks.aoscx


4. 
Verify installation   
ansible --version
ansible-galaxy collection list | grep aruba


5. 
Now you can run your playbook inside this environment
ansible-playbook -i inventory3 show_version.yml -vvv

6.
Bonus: Deactivate environment when done
deactivate

7.
Activate your virtual environment, then install paramiko:
pip install paramiko


8.
If you want to use the faster pylibssh backend instead, you can install:
pip install ansible-pylibssh


9. varify
pip show paramiko



               


